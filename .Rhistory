logReg.sa.pred.test[logReg.sa.pred.test>0]=1
logReg.sa.pred.test[logReg.sa.pred.test<=0]=0
mean(logReg.sa.pred.test == sa.test$chd)
n = sample.int(dim(sa.HeartDisease)[1], size=200)
sa.train= sa.HeartDisease[n,]
sa.test = sa.HeartDisease[-n,]
library("MASS")
###LDA
myX = sa.train[, c(2,3,5,9)]
sa.lda = lda(myX, sa.train[,10])
sa.predict.train <- predict(sa.lda,myX)$class
sa.predict.test <- predict(sa.lda,sa.test[,c(2,3,5,9)])$class
mean(sa.predict.train == sa.train$chd)
mean(sa.predict.test == sa.test$chd)
logReg.sa = glm(chd~tobacco+ldl+famhist+age,binomial, data = sa.train)
logReg.sa.pred.train = predict(logReg.sa,sa.train)
logReg.sa.pred.train[logReg.sa.pred.train>0]=1
logReg.sa.pred.train[logReg.sa.pred.train<=0]=0
mean(logReg.sa.pred.train == sa.train$chd)
logReg.sa.pred.test = predict(logReg.sa,sa.test)
logReg.sa.pred.test[logReg.sa.pred.test>0]=1
logReg.sa.pred.test[logReg.sa.pred.test<=0]=0
mean(logReg.sa.pred.test == sa.test$chd)
n = sample.int(dim(sa.HeartDisease)[1], size=200)
sa.train= sa.HeartDisease[n,]
sa.test = sa.HeartDisease[-n,]
library("MASS")
###LDA
myX = sa.train[, c(2,3,5,9)]
sa.lda = lda(myX, sa.train[,10])
sa.predict.train <- predict(sa.lda,myX)$class
sa.predict.test <- predict(sa.lda,sa.test[,c(2,3,5,9)])$class
mean(sa.predict.train == sa.train$chd)
mean(sa.predict.test == sa.test$chd)
logReg.sa = glm(chd~tobacco+ldl+famhist+age,binomial, data = sa.train)
logReg.sa.pred.train = predict(logReg.sa,sa.train)
logReg.sa.pred.train[logReg.sa.pred.train>0]=1
logReg.sa.pred.train[logReg.sa.pred.train<=0]=0
mean(logReg.sa.pred.train == sa.train$chd)
logReg.sa.pred.test = predict(logReg.sa,sa.test)
logReg.sa.pred.test[logReg.sa.pred.test>0]=1
logReg.sa.pred.test[logReg.sa.pred.test<=0]=0
mean(logReg.sa.pred.test == sa.test$chd)
n = sample.int(dim(sa.HeartDisease)[1], size=200)
sa.train= sa.HeartDisease[n,]
sa.test = sa.HeartDisease[-n,]
library("MASS")
###LDA
myX = sa.train[, c(2,3,5,9)]
sa.lda = lda(myX, sa.train[,10])
sa.predict.train <- predict(sa.lda,myX)$class
sa.predict.test <- predict(sa.lda,sa.test[,c(2,3,5,9)])$class
mean(sa.predict.train == sa.train$chd)
mean(sa.predict.test == sa.test$chd)
logReg.sa = glm(chd~tobacco+ldl+famhist+age,binomial, data = sa.train)
logReg.sa.pred.train = predict(logReg.sa,sa.train)
logReg.sa.pred.train[logReg.sa.pred.train>0]=1
logReg.sa.pred.train[logReg.sa.pred.train<=0]=0
mean(logReg.sa.pred.train == sa.train$chd)
logReg.sa.pred.test = predict(logReg.sa,sa.test)
logReg.sa.pred.test[logReg.sa.pred.test>0]=1
logReg.sa.pred.test[logReg.sa.pred.test<=0]=0
mean(logReg.sa.pred.test == sa.test$chd)
n = sample.int(dim(sa.HeartDisease)[1], size=200)
sa.train= sa.HeartDisease[n,]
sa.test = sa.HeartDisease[-n,]
library("MASS")
###LDA
myX = sa.train[, c(2,3,5,9)]
sa.lda = lda(myX, sa.train[,10])
sa.predict.train <- predict(sa.lda,myX)$class
sa.predict.test <- predict(sa.lda,sa.test[,c(2,3,5,9)])$class
mean(sa.predict.train == sa.train$chd)
mean(sa.predict.test == sa.test$chd)
logReg.sa = glm(chd~tobacco+ldl+famhist+age,binomial, data = sa.train)
logReg.sa.pred.train = predict(logReg.sa,sa.train)
logReg.sa.pred.train[logReg.sa.pred.train>0]=1
logReg.sa.pred.train[logReg.sa.pred.train<=0]=0
mean(logReg.sa.pred.train == sa.train$chd)
logReg.sa.pred.test = predict(logReg.sa,sa.test)
logReg.sa.pred.test[logReg.sa.pred.test>0]=1
logReg.sa.pred.test[logReg.sa.pred.test<=0]=0
mean(logReg.sa.pred.test == sa.test$chd)
n = sample.int(dim(sa.HeartDisease)[1], size=300)
sa.train= sa.HeartDisease[n,]
sa.test = sa.HeartDisease[-n,]
library("MASS")
###LDA
myX = sa.train[, c(2,3,5,9)]
sa.lda = lda(myX, sa.train[,10])
sa.predict.train <- predict(sa.lda,myX)$class
sa.predict.test <- predict(sa.lda,sa.test[,c(2,3,5,9)])$class
mean(sa.predict.train == sa.train$chd)
mean(sa.predict.test == sa.test$chd)
logReg.sa = glm(chd~tobacco+ldl+famhist+age,binomial, data = sa.train)
logReg.sa.pred.train = predict(logReg.sa,sa.train)
logReg.sa.pred.train[logReg.sa.pred.train>0]=1
logReg.sa.pred.train[logReg.sa.pred.train<=0]=0
mean(logReg.sa.pred.train == sa.train$chd)
logReg.sa.pred.test = predict(logReg.sa,sa.test)
logReg.sa.pred.test[logReg.sa.pred.test>0]=1
logReg.sa.pred.test[logReg.sa.pred.test<=0]=0
mean(logReg.sa.pred.test == sa.test$chd)
pairs(sa.HeartDisease[1:9],pch=21,bg=c("red","green")[factor(sa.HeartDisease$chd)])
pairs(sa.HeartDisease[-10],pch=21,bg=c("red","green")[factor(sa.HeartDisease$chd)])
sp500Components = read.csv("~/Dropbox/School/Statistics/Stat 154 Spring 2014/HW1/bf4024f5c75fc062.csv")
SP500 = read.csv("~/Dropbox/School/Statistics/Stat 154 Spring 2014/HW1/sp500Data.csv")
View(SP500)
names(sp500Components)
names(SP500)
library("RSQLite")
m = dbDriver("SQLite")
tfile = tempfile()
con=dbConnect(m, dbname = tfile)
dbWriteTable(con, "sp500Components", sp500Components)
dbWriteTable(con, "SP500", SP500)
SP500Combined = dbGetQuery(con, "SELECT * sp500Components,SP500 WHERE sp500Components.date = SP500.Calendar_Date;")
SP500Combined = dbGetQuery(con, "SELECT * sp500Components, SP500 WHERE sp500Components.date = SP500.Calendar_Date;")
SP500Combined = dbGetQuery(con, "SELECT * sp500Components, SP500 WHERE SP500.Calendar_Date = sp500Components.date;")
dbWriteTable(con, "SP500", sp500)
dbWriteTable(con, "sp500", SP500)
SP500Combined = dbGetQuery(con, "SELECT * sp500Components, sp500 WHERE sp500.Calendar_Date = sp500Components.date;")
library(data.table)
names(sp500Components)
length(unique(sp500Components$date))
length(unique(SP500$Calendar.Date))
tabulate(sp500Components$COMNAM)[which(tabulate(sp500Components$COMNAM) > 1343)] #5 companies have 2684 = 2*1342 dates. So there may be double entries. 2 companies do not have multiples of 1342. We need to figure out what's going on.
levels(sp500Components$COMNAM)[which(tabulate(sp500Components$COMNAM) > 1343)] #Chipotle has 1924 entries and Lowes has 1535 entries. None of the companies with more than 1343 dates have the 29th of October, 2012. So may be safe to delete this date and still have 433 stocks with 1342 dates for prices.
sp500Components$date[which(sp500Components$COMNAM=="C B S CORP NEW")]
sp500Components$date[which(sp500Components$COMNAM=="CHIPOTLE MEXICAN GRILL INC")]
sp500Components$date[which(sp500Components$COMNAM=="LOEWS CORP")] #visual checks
hurricane.sandy.indices = which(sp500Components$date=="20121029")
sp500Components.mod = sp500Components[-hurricane.sandy.indices,]#delete hurricane sandy dates
dates = levels(sp500Components.mod$date)[-1301] #pick the dates we want to use; delete the date of Sandy
sp500Components.mod$date = as.character(sp500Components.mod$date) #we've extracted the unique dates so we turn this back to a character vector for technical reasons
comnames = levels(sp500Components.mod$COMNAM)[which(tabulate(sp500Components.mod$COMNAM) >= 1342)]
comnames
comnames = levels(sp500Components.mod$COMNAM)[which(tabulate(sp500Components.mod$COMNAM) = 1342)]
comnames = levels(sp500Components.mod$COMNAM)[which(tabulate(sp500Components.mod$COMNAM) == 1342)]
comnames
names(sp500Components.mod)
dates = levels(sp500Components.mod$date) #pick the dates we want to use; delete the date of Sandy
dates
sp500Components = read.csv("~/Dropbox/School/Statistics/Stat 154 Spring 2014/HW1/bf4024f5c75fc062.csv")
SP500 = read.csv("~/Dropbox/School/Statistics/Stat 154 Spring 2014/HW1/sp500Data.csv")
sp500Components$PRC <- abs(sp500Components$PRC)
sp500Components$date <- as.factor(sp500Components$date)
tabulate(sp500Components$COMNAM)[which(tabulate(sp500Components$COMNAM) > 1343)]
levels(sp500Components$COMNAM)[which(tabulate(sp500Components$COMNAM) > 1343)]
sp500Components$date[which(sp500Components$COMNAM=="C B S CORP NEW")]
sp500Components$date[which(sp500Components$COMNAM=="CHIPOTLE MEXICAN GRILL INC")]
sp500Components$date[which(sp500Components$COMNAM=="LOEWS CORP")] #visual checks
hurricane.sandy.indices = which(sp500Components$date=="20121029")
sp500Components.mod = sp500Components[-hurricane.sandy.indices,]#delete hurricane sandy dates
dates = levels(sp500Components.mod$date)[-1301] #pick the dates we want to use; delete the date of Sandy
sp500Components.mod$date = as.character(sp500Components.mod$date) #we've extracted the unique dates so we turn this back to a character vector for technical reasons
comnames = levels(sp500Components.mod$COMNAM)[which(tabulate(sp500Components.mod$COMNAM) == 1342)]
comnames
dim(sp500Components.mod)
names(sp500Components.mod)
first.corp = sp500Components.mod[sp500Components.mod$COMNAM == comnames[1],]
dim(first.corp)
length.check = c()
for(i in 1:length(comnames)){
length.check[i] = dim(sp500Components.mod[sp500Components.mod$COMNAM == comnames[i],])[1]
}
unique(length.check)
names(sp500Components.mod)
imp.corp = data.frame(sp500Components.mod[sp500Components.mod$COMNAM == comnames[1],"PRC"])
for(i in 2:length(comnames)){
imp.corp[,i] = sp500Components.mod[sp500Components.mod$COMNAM == comnames[i],"PRC"]
}
names(imp.corp) = comnames
View(imp.corp)
which(SP500$Calendar.Date=="20121029")
tail(SP500$Calendar.Date)
tail(SP500$Calendar.Date, n=100)
?rownames
length(sp500Components.mod$date)
length(dates)
rownames(imp.corp) = dates
rownames(imp.corp)
imp.corp$dates = dates
SP500$Calendar.Date = SP500$dates
imp.corp$dates = dates
SP500$Calendar.Date = SP500$dates
library("RSQLite")
m = dbDriver("SQLite")
tfile = tempfile()
con=dbConnect(m, dbname = tfile)
dbWriteTable(con, "impcorp", imp.corp)
dbWriteTable(con, "SP500", SP500)
SP500.combined=dbGetQuery(con, "SELECT * FROM impcorp AS i, SP500 AS sp WHERE i.dates = sp.dates;")
SP500.combined=dbGetQuery(con, "SELECT * FROM impcorp AS i, SP500 AS sp WHERE i.dates == sp.dates;")
dbWriteTable(con, "SP500", SP500)
SP500.combined = dbGetQuery(con, "SELECT * FROM impcorp AS i,SP500 AS sp WHERE i.dates = sp.dates;")
SP500$dates = SP500$Calendar.Date
library("RSQLite")
m = dbDriver("SQLite")
tfile = tempfile()
con=dbConnect(m, dbname = tfile)
dbWriteTable(con, "impcorp", imp.corp)
dbWriteTable(con, "SP500", SP500)
SP500.combined = dbGetQuery(con, "SELECT * FROM impcorp AS i,SP500 AS sp WHERE i.dates = sp.dates;")
names(SP500)
View(SP500)
SP500 = read.csv("~/Dropbox/School/Statistics/Stat 154 Spring 2014/HW1/sp500Data.csv")
names(SP500)
SP500 = read.csv("~/Dropbox/School/Statistics/Stat 154 Spring 2014/HW1/sp500Data.csv")
library("RSQLite")
m = dbDriver("SQLite")
tfile = tempfile()
con=dbConnect(m, dbname = tfile)
dbWriteTable(con, "impcorp", imp.corp)
dbWriteTable(con, "SP500", SP500)
SP500.combined = dbGetQuery(con, "SELECT * FROM impcorp AS i,SP500 AS sp WHERE i.dates = sp.Calendar_Date;")
tail(names(SP500.combined))
SP500.combined = SP500.combined[, -c(,430, 429, 428)]
SP500.combined = SP500.combined[, -c(430, 429, 428)]
tail(names(SP500.combined))
sp.500.glm = glm(SP_500_Level~.,data=SP500.combined)
length(sp.500.glm$lambda)
dim(SP500.combined)
sp.500.glm = glmnet(SP500.combined[,-428],SP500.combined$SP_500_Level)
library("glmnet")
sp.500.glm = glmnet(SP500.combined[,-428],SP500.combined$SP_500_Level)
sp.500.glm = glmnet(as.matrix(SP500.combined[,-428]),SP500.combined$SP_500_Level)
lambda = numeric()
for (i in 1:length(sp.500.glm$lambda)){
lambda [i] = sum(coef(sp.500.glm, s = sp.500.glm$lambda[i])[,1]!=0)
}
which(lambda == 10)
length(sp.500.glm$lambda)
lambda
coef(sp.500.glm, s = sp.500.glm$lambda[10])[,1]
coef(sp.500.glm, s = sp.500.glm$lambda==8)[,1]!=0
which(lambda == 8)
sp.500.glm$lambda
coef(sp.500.glm, s = sp.500.glm$lambda[10])[,1]>0
coef(sp.500.glm, s = sp.500.glm$lambda[10,11,12])[,1]>0
lambda
which(lambda == 20)
coef(sp.500.glm, s = sp.500.glm$lambda[20])[,1][coef(sp.500.glm, s = sp.500.glm$lambda[20])[,1]!=0]
coef(sp.500.glm, s = sp.500.glm$lambda[22])[,1][coef(sp.500.glm, s = sp.500.glm$lambda[22])[,1]!=0]
sp.500.glm$lambda
dim(imp.corp)
1342/60
sp500Components = read.csv("~/Dropbox/School/Statistics/Stat 154 Spring 2014/HW1/bf4024f5c75fc062.csv")
DailyReturns = c()
tick = unique(sp500Components$TICKER)
for(i in 1:length(unique(sp500Components$TICKER))){
Ticker = sp500Components[sp500Components$TICKER == tick[i], ]
uniquediff = (Ticker$PRC[2:length(Ticker$PRC)]/Ticker$PRC[1:(length(Ticker$PRC)-1)])-1
DailyReturns = c(DailyReturns, 0, uniquediff)
}
sp500Components$DailyReturns = DailyReturns
imp.corp = data.frame(sp500Components.mod[sp500Components.mod$COMNAM == comnames[1],"DailyReturns"])
for(i in 2:length(comnames)){
imp.corp[,i] = sp500Components.mod[sp500Components.mod$COMNAM == comnames[i],"DailyReturns"]
}
names(imp.corp) = comnames
imp.corp$dates = dates
m = dbDriver("SQLite")
tfile = tempfile()
con=dbConnect(m, dbname = tfile)
dbWriteTable(con, "impcorp", imp.corp)
dbWriteTable(con, "SP500", SP500)
SP500.combined = dbGetQuery(con, "SELECT * FROM impcorp AS i,SP500 AS sp WHERE i.dates = sp.Calendar_Date;")
SP500.combined = SP500.combined[, -c(430, 429, 428)]
library("glmnet")
sp.500.glm = glmnet(as.matrix(SP500.combined[,-428]),SP500.combined$SP_500_Level)
lambda = numeric()
for (i in 1:length(sp.500.glm$lambda)){
lambda [i] = sum(coef(sp.500.glm, s = sp.500.glm$lambda[i])[,1]!=0)
}
which(lambda == 20)
coef(sp.500.glm, s = sp.500.glm$lambda[22])[,1][coef(sp.500.glm, s = sp.500.glm$lambda[22])[,1]!=0]
length(sp500Components.mod[sp500Components.mod$COMNAM == comnames[1],"DailyReturns"])
DailyReturns
sp500Components$DailyReturns = DailyReturns
sp500Components = read.csv("~/Dropbox/School/Statistics/Stat 154 Spring 2014/HW1/bf4024f5c75fc062.csv")
DailyReturns = c()
tick = unique(sp500Components$TICKER)
for(i in 1:length(unique(sp500Components$TICKER))){
Ticker = sp500Components[sp500Components$TICKER == tick[i], ]
uniquediff = (Ticker$PRC[2:length(Ticker$PRC)]/Ticker$PRC[1:(length(Ticker$PRC)-1)])-1
DailyReturns = c(DailyReturns, 0, uniquediff)
}
sp500Components$DailyReturns = DailyReturns
sp500Components$PRC <- abs(sp500Components$PRC)
sp500Components$date <- as.factor(sp500Components$date)
tabulate(sp500Components$COMNAM)[which(tabulate(sp500Components$COMNAM) > 1343)]
levels(sp500Components$COMNAM)[which(tabulate(sp500Components$COMNAM) > 1343)]
sp500Components$date[which(sp500Components$COMNAM=="C B S CORP NEW")]
sp500Components$date[which(sp500Components$COMNAM=="CHIPOTLE MEXICAN GRILL INC")]
sp500Components$date[which(sp500Components$COMNAM=="LOEWS CORP")] #visual checks
hurricane.sandy.indices = which(sp500Components$date=="20121029")
sp500Components.mod = sp500Components[-hurricane.sandy.indices,]#delete hurricane sandy dates
dates = levels(sp500Components.mod$date)[-1301] #pick the dates we want to use; delete the date of Sandy
sp500Components.mod$date = as.character(sp500Components.mod$date) #we've extracted the unique dates so we turn this back to a character vector for technical reasons
comnames = levels(sp500Components.mod$COMNAM)[which(tabulate(sp500Components.mod$COMNAM) == 1342)]
imp.corp = data.frame(sp500Components.mod[sp500Components.mod$COMNAM == comnames[1],"PRC"])
for(i in 2:length(comnames)){
imp.corp[,i] = sp500Components.mod[sp500Components.mod$COMNAM == comnames[i],"PRC"]
}
names(imp.corp) = comnames
imp.corp$dates = dates
SP500 = read.csv("~/Dropbox/School/Statistics/Stat 154 Spring 2014/HW1/sp500Data.csv")
library("RSQLite")
m = dbDriver("SQLite")
tfile = tempfile()
con=dbConnect(m, dbname = tfile)
dbWriteTable(con, "impcorp", imp.corp)
dbWriteTable(con, "SP500", SP500)
SP500.combined = dbGetQuery(con, "SELECT * FROM impcorp AS i,SP500 AS sp WHERE i.dates = sp.Calendar_Date;")
SP500.combined = SP500.combined[, -c(430, 429, 428)]
library("glmnet")
sp.500.glm = glmnet(as.matrix(SP500.combined[,-428]),SP500.combined$SP_500_Level)
lambda = numeric()
for (i in 1:length(sp.500.glm$lambda)){
lambda [i] = sum(coef(sp.500.glm, s = sp.500.glm$lambda[i])[,1]!=0)
}
which(lambda == 20)
coef(sp.500.glm, s = sp.500.glm$lambda[22])[,1][coef(sp.500.glm, s = sp.500.glm$lambda[22])[,1]!=0]
#################################### Problem 1B ####################################
#################################### Problem 1C ####################################
#################################### Problem 1D.A ####################################
imp.corp = data.frame(sp500Components.mod[sp500Components.mod$COMNAM == comnames[1],"DailyReturns"])
for(i in 2:length(comnames)){
imp.corp[,i] = sp500Components.mod[sp500Components.mod$COMNAM == comnames[i],"DailyReturns"]
}
names(imp.corp) = comnames
imp.corp$dates = dates
m = dbDriver("SQLite")
tfile = tempfile()
con=dbConnect(m, dbname = tfile)
dbWriteTable(con, "impcorp", imp.corp)
dbWriteTable(con, "SP500", SP500)
SP500.combined = dbGetQuery(con, "SELECT * FROM impcorp AS i,SP500 AS sp WHERE i.dates = sp.Calendar_Date;")
SP500.combined = SP500.combined[, -c(430, 429, 428)]
library("glmnet")
sp.500.glm = glmnet(as.matrix(SP500.combined[,-428]),SP500.combined$SP_500_Level)
lambda = numeric()
for (i in 1:length(sp.500.glm$lambda)){
lambda [i] = sum(coef(sp.500.glm, s = sp.500.glm$lambda[i])[,1]!=0)
}
which(lambda == 20)
coef(sp.500.glm, s = sp.500.glm$lambda[22])[,1][coef(sp.500.glm, s = sp.500.glm$lambda[22])[,1]!=0]
SP500.combined
dim(SP500.combined)
sp.500.glm = glmnet(as.matrix(SP500.combined[,-428]),SP500.combined$SP_500_Level)
SP500.combined = dbGetQuery(con, "SELECT * FROM impcorp AS i,SP500 AS sp WHERE i.dates = sp.Calendar_Date;")
tail(names(SP500.combined), n=10)
SP500.combined = SP500.combined[, -c(430, 429, 428)]
X.sp = as.matrix(SP500.combined[,-428])
sp.500.glm = glmnet(X.sp,SP500.combined$SP_500_Level)
sp500Components$DailyReturns = abs(DailyReturns)
tabulate(sp500Components$COMNAM)[which(tabulate(sp500Components$COMNAM) > 1343)]
levels(sp500Components$COMNAM)[which(tabulate(sp500Components$COMNAM) > 1343)]
sp500Components$date[which(sp500Components$COMNAM=="C B S CORP NEW")]
sp500Components$date[which(sp500Components$COMNAM=="CHIPOTLE MEXICAN GRILL INC")]
sp500Components$date[which(sp500Components$COMNAM=="LOEWS CORP")] #visual checks
hurricane.sandy.indices = which(sp500Components$date=="20121029")
sp500Components.mod = sp500Components[-hurricane.sandy.indices,]#delete hurricane sandy dates
dates = levels(sp500Components.mod$date)[-1301] #pick the dates we want to use; delete the date of Sandy
sp500Components.mod$date = as.character(sp500Components.mod$date) #we've extracted the unique dates so we turn this back to a character vector for technical reasons
comnames = levels(sp500Components.mod$COMNAM)[which(tabulate(sp500Components.mod$COMNAM) == 1342)]
imp.corp = data.frame(sp500Components.mod[sp500Components.mod$COMNAM == comnames[1],"DailyReturns"])
for(i in 2:length(comnames)){
imp.corp[,i] = sp500Components.mod[sp500Components.mod$COMNAM == comnames[i],"DailyReturns"]
}
names(imp.corp) = comnames
imp.corp$dates = dates
m = dbDriver("SQLite")
tfile = tempfile()
con=dbConnect(m, dbname = tfile)
dbWriteTable(con, "impcorp", imp.corp)
dbWriteTable(con, "SP500", SP500)
SP500.combined = dbGetQuery(con, "SELECT * FROM impcorp AS i,SP500 AS sp WHERE i.dates = sp.Calendar_Date;")
SP500.combined = SP500.combined[, -c(430, 429, 428)]
library("glmnet")
X.sp = as.matrix(SP500.combined[,-428])
sp.500.glm = glmnet(X.sp,SP500.combined$SP_500_Level)
is.na(DailyReturns)
sum(is.na(DailyReturns))
X.sp = na.omit(as.matrix(SP500.combined[,-428]))
sp.500.glm = glmnet(X.sp,SP500.combined$SP_500_Level)
SP500.combined = dbGetQuery(con, "SELECT * FROM impcorp AS i,SP500 AS sp WHERE i.dates = sp.Calendar_Date;")
SP500.combined = na.omit(SP500.combined[, -c(430, 429, 428)])
X.sp = na.omit(as.matrix(SP500.combined[,-428]))
sp.500.glm = glmnet(X.sp,SP500.combined$SP_500_Level)
lambda = numeric()
for (i in 1:length(sp.500.glm$lambda)){
lambda [i] = sum(coef(sp.500.glm, s = sp.500.glm$lambda[i])[,1]!=0)
}
which(lambda == 20)
lambda
which(lambda == 21)
coef(sp.500.glm, s = sp.500.glm$lambda[11])[,1][coef(sp.500.glm, s = sp.500.glm$lambda[11])[,1]!=0]
sp500Components = read.csv("~/Dropbox/School/Statistics/Stat 154 Spring 2014/HW1/bf4024f5c75fc062.csv")
DailyReturns = c()
tick = unique(sp500Components$TICKER)
for(i in 1:length(unique(sp500Components$TICKER))){
Ticker = sp500Components[sp500Components$TICKER == tick[i], ]
uniquediff = (Ticker$PRC[2:length(Ticker$PRC)]/Ticker$PRC[1:(length(Ticker$PRC)-1)])-1
DailyReturns = c(DailyReturns, 0, uniquediff)
}
sp500Components$DailyReturns = abs(DailyReturns)
sp500Components$PRC <- abs(sp500Components$PRC)
sp500Components$date <- as.factor(sp500Components$date)
tabulate(sp500Components$COMNAM)[which(tabulate(sp500Components$COMNAM) > 1343)]
levels(sp500Components$COMNAM)[which(tabulate(sp500Components$COMNAM) > 1343)]
sp500Components$date[which(sp500Components$COMNAM=="C B S CORP NEW")]
sp500Components$date[which(sp500Components$COMNAM=="CHIPOTLE MEXICAN GRILL INC")]
sp500Components$date[which(sp500Components$COMNAM=="LOEWS CORP")] #visual checks
hurricane.sandy.indices = which(sp500Components$date=="20121029")
sp500Components.mod = sp500Components[-hurricane.sandy.indices,]#delete hurricane sandy dates
dates = levels(sp500Components.mod$date)[-1301] #pick the dates we want to use; delete the date of Sandy
sp500Components.mod$date = as.character(sp500Components.mod$date) #we've extracted the unique dates so we turn this back to a character vector for technical reasons
comnames = levels(sp500Components.mod$COMNAM)[which(tabulate(sp500Components.mod$COMNAM) == 1342)]
imp.corp = data.frame(sp500Components.mod[sp500Components.mod$COMNAM == comnames[1],"PRC"])
for(i in 2:length(comnames)){
imp.corp[,i] = sp500Components.mod[sp500Components.mod$COMNAM == comnames[i],"PRC"]
}
names(imp.corp) = comnames
imp.corp$dates = dates
SP500 = read.csv("~/Dropbox/School/Statistics/Stat 154 Spring 2014/HW1/sp500Data.csv")
library("RSQLite")
m = dbDriver("SQLite")
tfile = tempfile()
con=dbConnect(m, dbname = tfile)
dbWriteTable(con, "impcorp", imp.corp)
dbWriteTable(con, "SP500", SP500)
SP500.combined = dbGetQuery(con, "SELECT * FROM impcorp AS i,SP500 AS sp WHERE i.dates = sp.Calendar_Date;")
SP500.combined = SP500.combined[, -c(430, 429, 428)]
library("glmnet")
sp.500.glm = glmnet(as.matrix(SP500.combined[,-428]),SP500.combined$SP_500_Level)
lambda = numeric()
for (i in 1:length(sp.500.glm$lambda)){
lambda [i] = sum(coef(sp.500.glm, s = sp.500.glm$lambda[i])[,1]!=0)
}
which(lambda == 20)
coef(sp.500.glm, s = sp.500.glm$lambda[22])[,1][coef(sp.500.glm, s = sp.500.glm$lambda[22])[,1]!=0]
Portfolio1a = coef(sp.500.glm, s = sp.500.glm$lambda[22])[,1][coef(sp.500.glm, s = sp.500.glm$lambda[22])[,1]!=0]
imp.corp = data.frame(sp500Components.mod[sp500Components.mod$COMNAM == comnames[1],"DailyReturns"])
for(i in 2:length(comnames)){
imp.corp[,i] = sp500Components.mod[sp500Components.mod$COMNAM == comnames[i],"DailyReturns"]
}
names(imp.corp) = comnames
imp.corp$dates = dates
m = dbDriver("SQLite")
tfile = tempfile()
con=dbConnect(m, dbname = tfile)
dbWriteTable(con, "impcorp", imp.corp)
dbWriteTable(con, "SP500", SP500)
SP500.combined = dbGetQuery(con, "SELECT * FROM impcorp AS i,SP500 AS sp WHERE i.dates = sp.Calendar_Date;")
SP500.combined = na.omit(SP500.combined[, -c(430, 429, 428)])
X.sp = na.omit(as.matrix(SP500.combined[,-428]))
sp.500.glm = glmnet(X.sp,SP500.combined$SP_500_Level)
lambda = numeric()
for (i in 1:length(sp.500.glm$lambda)){
lambda [i] = sum(coef(sp.500.glm, s = sp.500.glm$lambda[i])[,1]!=0)
}
which(lambda == 21)
Portfolio1d.a = coef(sp.500.glm, s = sp.500.glm$lambda[11])[,1][coef(sp.500.glm, s = sp.500.glm$lambda[11])[,1]!=0]
# (Intercept)                     A_E_S_CORP         AMERISOURCEBERGEN_CORP               APOLLO_GROUP_INC
# 1292.29674                       57.35684                     -212.58984                     -287.42818
# BAKER_HUGHES_INC     CAPITAL_ONE_FINANCIAL_CORP      CH_ROBINSON_WORLDWIDE_INC                      COACH_INC
# 127.00013                      -98.27150                     -496.20672                       14.06000
# DU_PONT_E_I_DE_NEMOURS___CO               FLIR_SYSTEMS_INC      INTERPUBLIC_GROUP_COS_INC              K_L_A_TENCOR_CORP
# -187.26383                      116.30060                     -135.08641                     -693.38550
# MARRIOTT_INTERNATIONAL_INC_NEW                 MASTERCARD_INC           MCKESSON_H_B_O_C_INC          NABORS_INDUSTRIES_LTD
# -93.83880                     -165.52266                     -551.94695                     -215.63191
# PRICELINE_COM_INC                    SAFEWAY_INC                    SNAP_ON_INC             SPRINT_NEXTEL_CORP
# 28.24306                      269.44416                       18.58140                     -271.10870
# WESTERN_UNION_CO
# -597.51358
Portfolio1d.a
?seq
seq(0, 1200, 60)
seq(0, 1200, 62)
seq(0, 1340, 60)
upperbound = seq(0, 1340, 60)[-1]
upperbound
length(seq(0, 1340, 60))
lowerbound = seq(seq(0, 1340, 60))[-23] + 1
lowerbound
lowerbound = seq(seq(0, 1340, 60))[-23]
lowerbound
lowerbound = seq(0, 1340, 60)[-23] + 1
lowerbound
?closest
a = c(1,1,1,1)
which(a==1)
head(which(a==1), n=1)
a = c(2,1,1,1)
head(which(a==1), n=1)
?closest
closest(vec, n){
vec[head(min(vec-n), 1)]
}
closest= function(vec, n){
vec[head(min(vec-n), 1)]
}
a = c(1,2,3,4)
closest(a, 4)
closest= function(vec, n){
vec[head(vec==min(vec-n), 1)]
}
closest(a, 4)
min(a-4)
a[min(abs(a-4))]
